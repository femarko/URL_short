version: "3.9"

services:

#  app:
#    build: .
#    env_file:
#      - .env.dev
#    command:
#      - sh
#      - -c
#      - |
#        python3 -m src.shortener_app.db.drop_create_tables &&
#        python3 -m src.shortener_app.entrypoints.fastapi_app.main
#    depends_on:
#      dev_db:
#        condition: service_healthy
#      test_db:
#        condition: service_healthy
#    ports:
#      - "8080:8080"

  dev_db:
    image: postgres:14.3-alpine3.15
    env_file:
      - .env.dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    ports:
      - "5435:5432"

  test_db:
    image: postgres:14.3-alpine3.15
    env_file:
      - .env.test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "5436:5432"

  pg_admin:
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    depends_on:
      - dev_db
      - test_db
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 2G
    env_file:
      - .env.dev
